name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        JWT_SECRET: test-secret-key
        PORT: 3001
    
    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check build
      run: |
        echo "Verificando que la aplicación puede iniciarse..."
        node src/index.js &
        APP_PID=$!
        sleep 5
        curl http://localhost:3000/health || exit 1
        kill $APP_PID
      env:
        NODE_ENV: production
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        PORT: 3000

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to server
      run: |
        echo "Aquí iría el despliegue a producción"
        echo "Por ejemplo: docker build, push a registry, deploy a K8s, etc."
        # Ejemplo de comandos de despliegue:
        # docker build -t payment-api:${{ github.sha }} .
        # docker push registry.example.com/payment-api:${{ github.sha }}
        # kubectl set image deployment/payment-api payment-api=registry.example.com/payment-api:${{ github.sha }}
    
    - name: Health check after deployment
      run: |
        echo "Verificando que el despliegue fue exitoso..."
        # curl https://api.production.com/health